enum DataFeedType {
    RSS
    ATOM
}

input CreateDataFeedSubscriptionInput {
    url: String!
    title: String!
    description: String
    enabled: Boolean!
}

input UpdateDataFeedSubscriptionInput {
    url: String
    enabled: Boolean
    title: String!
    description: String
}

input CreateNewsletter {
    title: String!
    numberOfDaysToInclude: Int!
    subscriptionIds: [String!]!
    discoverable: Boolean
    shared: Boolean
}

input UpdateNewsletterInput {
    title: String
    numberOfDaysToInclude: Int
    subscriptionIds: [String]
    discoverable: Boolean
    shared: Boolean
}

input SubscribeToNewsletterInput {
    newsletterId: String!
}

input UnsubscribeFromNewsletterInput {
    newsletterId: String!
}


type Newsletter @aws_cognito_user_pools {
    newsletterId: String!
    title: String!
    numberOfDaysToInclude: Int!
    subscriptionIds: [String!]
    subscriptions:[DataFeedSubscription]
    discoverable: Boolean
    shared: Boolean
    scheduleId: String!
    createdAt: AWSDateTime!
}

type Newsletters @aws_cognito_user_pools {
    newsletters: [Newsletter!]!
    nextToken: String
}

input GetNewsletterInput {
    newsletterId: String!
}

input GetNewslettersInput {
    nextToken: String
}

type DataFeedSubscription @aws_cognito_user_pools {
    subscriptionId: String!
    url: String!
    feedType: DataFeedType!
    createdAt: AWSDateTime
    enabled: Boolean
    articles: [DataFeedArticle]
    title: String!
    description: String
}

type DataFeedSubscriptions @aws_cognito_user_pools {
    subscriptions: [DataFeedSubscription]
    nextToken: String
    limit: Int
}



input GetDataFeedSubscriptionInput {
    subscriptionId: String!
}


type NewsletterEmail @aws_cognito_user_pools {
    newsletterId: String
    emailId: String!
    campaignId: String
    createdAt: AWSDateTime!
    htmlPath: String
    textPath: String
}

type NewsletterEmails @aws_cognito_user_pools {
    newsletterEmails: [NewsletterEmail]
    nextToken: String
}

input GetNewsletterEmailsInput {
    newsletterId: String!
}

input GetNewsletterEmailInput {
    newsletterId: String!
    emailId: String!
}


type DataFeedArticle @aws_cognito_user_pools {
    subscriptionId: String!
    articleId: String!
    url: String!
    articleSummary: String!
    createdAt: AWSDateTime!
    title: String!
}

type DataFeedArticles @aws_cognito_user_pools {
    dataFeedArticles: [DataFeedArticle]
    nextToken: String
}

input DataFeedArticlesInput {
    subscriptionId: String
}

type Subscriber @aws_cognito_user_pools {
    newsletterId: String!
}


input UserNewsletterSubscriptionStatusInput {
    newsletterId: String!
}

type NewsletterUserSubscriberStats @aws_cognito_user_pools {
    subscriberCount: Int!
}

input GetNewsletterSubscriberStatsInput {
    newsletterId: String!
}

type Mutation {
    createDataFeedSubscription(input: CreateDataFeedSubscriptionInput!): DataFeedSubscription @aws_cognito_user_pools
    createNewsletter(input: CreateNewsletter!): Newsletter @aws_cognito_user_pools
    subscribeToNewsletter(input: SubscribeToNewsletterInput!): Boolean @aws_cognito_user_pools
    unsubscribeFromNewsletter(input: UnsubscribeFromNewsletterInput): Boolean @aws_cognito_user_pools
    updateNewsletter(input: UpdateNewsletterInput!, newsletterId: String!): Boolean @aws_cognito_user_pools
    updateDataFeed(input: UpdateDataFeedSubscriptionInput!, subscriptionId: String!): Boolean @aws_cognito_user_pools
}

type Query {
    getNewsletters(input: GetNewslettersInput): Newsletters! @aws_cognito_user_pools
    getNewsletter(input: GetNewsletterInput): Newsletter! @aws_cognito_user_pools
    getDataFeedSubscriptions(nextToken: String, limit: Int): DataFeedSubscriptions! @aws_cognito_user_pools
    getDataFeedSubscription(input: GetDataFeedSubscriptionInput): DataFeedSubscription @aws_cognito_user_pools
    getDataFeedArticles(input: DataFeedArticlesInput, nextToken: String, limit: Int): DataFeedArticles @aws_cognito_user_pools
    getNewsletterEmail(input: GetNewsletterEmailInput): NewsletterEmail! @aws_cognito_user_pools
    getNewsletterEmails(input: GetNewsletterEmailsInput, nextToken: String, limit: Int): NewsletterEmails @aws_cognito_user_pools
    getUserNewsletterSubscriptionStatus(input: UserNewsletterSubscriptionStatusInput): Boolean @aws_cognito_user_pools
    getNewsletterSubscriberStats(input: GetNewsletterSubscriberStatsInput): NewsletterUserSubscriberStats @aws_cognito_user_pools
}


schema {
    query: Query
    mutation: Mutation
}