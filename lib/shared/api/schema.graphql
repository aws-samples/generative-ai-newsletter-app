# ENUMS
enum DataFeedType {
  RSS
  ATOM
}
enum ArticleSummaryType {
  SHORT_SUMMARY
  LONG_SUMMARY
  KEYWORDS
}


# TYPES

type Newsletter @aws_cognito_user_pools {
  newsletterId: String!
  accountId: String!
  title: String!
  numberOfDaysToInclude: Int!
  dataFeedIds: [String!]
  dataFeeds: [DataFeed]
  isPrivate: Boolean!
  scheduleId: String!
  createdAt: AWSDateTime!
  newsletterIntroPrompt: String
  articleSummaryType: ArticleSummaryType
  newsletterStyle: AWSJSON
}

type Newsletters @aws_cognito_user_pools {
  newsletters: [Newsletter!]!
  nextToken: String
}

type NewsletterSubscriptions @aws_cognito_user_pools {
  newsletters: [Newsletter]!
  subscribedCount: Int!
}

type DataFeed @aws_cognito_user_pools {
  dataFeedId: String!
  accountId: String
  url: String!
  feedType: DataFeedType!
  createdAt: AWSDateTime
  enabled: Boolean
  articles: [Article]
  title: String!
  description: String
  summarizationPrompt: String
  isPrivate: Boolean!
}

type DataFeeds @aws_cognito_user_pools {
  dataFeeds: [DataFeed]
  nextToken: String
}

type Publication @aws_cognito_user_pools {
  newsletterId: String
  publicationId: String!
  accountId: String
  campaignId: String
  createdAt: AWSDateTime!
  htmlPath: String
  textPath: String
}

type Publications @aws_cognito_user_pools {
  items: [Publication]
  nextToken: String
}

type Article @aws_cognito_user_pools {
  dataFeedId: String!
  articleId: String!
  accountId: String
  url: String!
  createdAt: AWSDateTime!
  title: String!
  providedDescription: String
  providedCategories: String
  publishDate: AWSDateTime
  summarizationPrompt: String
  flaggedContent: Boolean
  articleSummary: String @deprecated
  keywords: String
  shortSummary: String
  longSummary: String
}

type Articles @aws_cognito_user_pools {
  articles: [Article]
  nextToken: String
}

type Subscriber @aws_cognito_user_pools {
  newsletterId: String!
}

type NewsletterUserSubscriberStats @aws_cognito_user_pools {
  subscriberCount: Int!
}


# INPUTS

input CreateDataFeedInput {
  url: String!
  title: String!
  description: String
  enabled: Boolean!
  summarizationPrompt: String
  isPrivate: Boolean
}

input CanManageDataFeedInput {
  dataFeedId: String!
}

input UpdateDataFeedInput {
  dataFeedId: String!
  url: String
  enabled: Boolean
  title: String!
  description: String
  summarizationPrompt: String
  isPrivate: Boolean
}

input CreateNewsletterInput {
  title: String!
  numberOfDaysToInclude: Int!
  dataFeedIds: [String!]!
  isPrivate: Boolean
  newsletterIntroPrompt: String
  articleSummaryType: ArticleSummaryType
  newsletterStyle: AWSJSON
}

input CanManageNewsletterInput {
  newsletterId: String!
}

input UpdateNewsletterInput {
  newsletterId: String!
  title: String
  numberOfDaysToInclude: Int
  dataFeedIds: [String]
  isPrivate: Boolean
  newsletterIntroPrompt: String
  articleSummaryType: String
  newsletterStyle: AWSJSON
}

input ListNewslettersInput {
  includeDiscoverable: Boolean
  includeOwned: Boolean
  includeShared: Boolean
}

input ListDataFeedsInput {
  includeDiscoverable: Boolean
  includeOwned: Boolean
  includeShared: Boolean
}

input SubscribeToNewsletterInput {
  newsletterId: String!
}

input UnsubscribeFromNewsletterInput {
  newsletterId: String!
}



input GetNewsletterInput {
  newsletterId: String!
}

input GetDataFeedInput {
  dataFeedId: String!
}

input ListPublicationsInput {
  newsletterId: String!
}

input ListArticlesInput {
  dataFeedId: String!
}

input GetPublicationInput {
  newsletterId: String!
  publicationId: String!
}


input FlagArticleInput {
  dataFeedId: String!
  articleId: String!
  flaggedContent: Boolean!
}

input GetUserSubscriptionStatusInput {
  newsletterId: String!
}

input GetNewsletterSubscriberStatsInput {
  newsletterId: String!
}

type Mutation {
  createDataFeed(
    input: CreateDataFeedInput!
  ): DataFeed @aws_cognito_user_pools
  createNewsletter(input: CreateNewsletterInput!): Newsletter @aws_cognito_user_pools 
  subscribeToNewsletter(input: SubscribeToNewsletterInput!): Boolean 
    @aws_cognito_user_pools
  unsubscribeFromNewsletter(input: UnsubscribeFromNewsletterInput): Boolean
    @aws_cognito_user_pools
  updateNewsletter(
    input: UpdateNewsletterInput!
  ): Boolean @aws_cognito_user_pools
  updateDataFeed(
    input: UpdateDataFeedInput!
  ): Boolean @aws_cognito_user_pools
  flagArticle(input: FlagArticleInput!): Boolean 
    @aws_cognito_user_pools 
}

type Query {
  listNewsletters(
    input: ListNewslettersInput
    nextToken: String
    limit: Int
  ): Newsletters! @aws_cognito_user_pools 
  getNewsletter(input: GetNewsletterInput): Newsletter! @aws_cognito_user_pools
  listDataFeeds(
    input: ListDataFeedsInput
    nextToken: String
    limit: Int
  ): DataFeeds! @aws_cognito_user_pools
  getDataFeed(
    input: GetDataFeedInput
  ): DataFeed @aws_cognito_user_pools 
  listArticles(
    input: ListArticlesInput
    nextToken: String
    limit: Int
  ): Articles @aws_cognito_user_pools 
  getPublication(input: GetPublicationInput): Publication!
    @aws_cognito_user_pools 
  listPublications(
    input: ListPublicationsInput
    nextToken: String
    limit: Int
  ): Publications @aws_cognito_user_pools
  getUserSubscriptionStatus(
    input: GetUserSubscriptionStatusInput
  ): Boolean @aws_cognito_user_pools 
  listUserSubscriptions(nextToken: String, limit: Int): NewsletterSubscriptions!
    @aws_cognito_user_pools 
  getNewsletterSubscriberStats(
    input: GetNewsletterSubscriberStatsInput
  ): NewsletterUserSubscriberStats @aws_cognito_user_pools
  canManageNewsletter(
    input: CanManageNewsletterInput
  ): Boolean! @aws_cognito_user_pools
  canManageDataFeed(
    input: CanManageDataFeedInput
  ): Boolean! @aws_cognito_user_pools
}

schema {
  query: Query
  mutation: Mutation
}
